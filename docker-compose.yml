services:
  mongo:
    image: mongo:4.4-bionic
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    command: mongod --wiredTigerCacheSizeGB 0.5 --nojournal # keep cache size small to prevent OOM on prod
    networks:
      - strava-challange-network

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.backend
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    networks:
      - strava-challange-network
    env_file:
      - ./.env

  tests:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.backend
    command: pytest src/tests/
    depends_on:
      - mongo
    networks:
      - strava-challange-network
    profiles: # excecutes only when "docker compose --profile test up tests"
      - test

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: frontend
    ports:
      - "5000:5000"
    depends_on:
      - backend
    networks:
      - strava-challange-network

  nginx:
      image: nginx:latest
      container_name: nginx
      ports:
        - "80:80" # Expose Nginx on port 80
      depends_on:
        - frontend
        - backend
      networks:
        - strava-challange-network
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro # Mount custom Nginx config
        - nginx_cache:/var/cache/nginx # Persistent caching volume

networks:
  strava-challange-network:
    driver: bridge

volumes:
  mongo_data:
  nginx_cache:
