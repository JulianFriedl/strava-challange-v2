worker_processes 1;

events {
    worker_connections 128;
    multi_accept on;         # Allow workers to accept multiple connections at once
}

http {
    # Define rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=2r/s;

    # Define caching
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=500m inactive=60m use_temp_path=off;


    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for" Cache: $upstream_cache_status';

    # Define log destinations
    access_log /dev/stdout main;  # Standard access log to stdout
    error_log /dev/stderr warn;  # Error log to stderr

    gzip on;
    gzip_min_length 1000;
    gzip_vary on;          # Add "Vary: Accept-Encoding" to responses
    gzip_comp_level 5;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;

        # Frontend proxy
        location / {
            proxy_pass http://frontend:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Backend proxy
        location /api/ {
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

            limit_req zone=api_limit burst=3 nodelay;
            limit_req_status 429;

            proxy_cache off;
            add_header Cache-Control "no-store";
        }

        location /api/map {
            proxy_cache_key "$scheme://$host$request_uri";
            proxy_cache my_cache;
            proxy_cache_valid 200 1m;
            proxy_cache_valid 404 1m;
            proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;

            limit_req zone=api_limit burst=3 nodelay;
            limit_req_status 429;

            proxy_pass http://backend:8080;
        }

        location /api/leaderboard{
            proxy_cache_key "$scheme://$host";
            proxy_cache my_cache;
            proxy_cache_valid 200 1m;
            proxy_cache_valid 404 1m;
            proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;

            limit_req zone=api_limit burst=3 nodelay;
            limit_req_status 429;

            proxy_pass http://backend:8080;
        }

        location /api/auth {
            proxy_pass http://backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;

            limit_req zone=api_limit burst=10 nodelay;
            limit_req_status 429;
            proxy_cache off;
            add_header Cache-Control "no-store";
        }

   }

}
